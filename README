
  This python3 script lets you mirror security updates which is something that is not always supported by other
  mirrors, probably for security reasons. They want you to always go direct to the original debian repository when
  you can. It might also allow you to mirror general releases, but I haven't tested that yet.

  Run ./RepositoryMirror.py -h to see basic usage
  Run ./RepositoryMirror.py -create : Initialise the Repository Mirror (default security.debian.org)
  Run ./RepositoryMirror.py : Shows amount of data to update missing packages
  Run ./RepositoryMirror.py -fetch : Actually goes and fetches the missing files - initially may be 1-2 Gigabytes!

  Note:
      Option -v will add more details to operations
      Edit RM.cfg to alter the repository/Distrubution/architectures to be mirrored

  Use the local mirror by adding in a line such as:

# local security mirror
  deb file:///local/work/RepositoryMirror/security.debian.org/ wheezy/updates main contrib non-free

  And then the usual :

    apt-get update
    apt-get upgrade

  Note: I get the following apparently harmless "Ign file" lines:
# apt-get update
Ign file: wheezy/updates Release.gpg
Get:1 file: wheezy/updates Release [102 kB]
Ign file: wheezy/updates/contrib Translation-en
Ign file: wheezy/updates/main Translation-en
Ign file: wheezy/updates/non-free Translation-en
Reading package lists... Done

  The first non-blank part of the deb line is a URL so you can make the directory available by other methods such
  as ftp or http to share the repository remotely.
  e.g. Add something like this to /etc/apache2/sites-enabled/000-default

    Alias /debs/ "/local/work/debs/"
    <Directory "/local/work/debs/">
        Options Indexes MultiViews FollowSymLinks
        AllowOverride None
        Order deny,allow
        Deny from all
        Allow from 10.0.0.0/16
        Allow from 10.1.0.0/16
        Allow from 127.0.0.0/255.0.0.0 ::1/128
    </Directory>

   Then create a symbolic link in the /local/work/debs/ to point to the security.debian.org directory

ln -s ../RM/security.debian.org ../debs/security.debian.org

   Then reload apache configuration with:

/etc/init.d/apache2 reload

    Note:
     * I had to fix the permissions to allow apache to access this via: chmod -R a+r security.debian.org
     * The apt-get update command reported the files as being untrusted perhaps because the signature/dates or
     something were not matching.
     * Make sure all the files are readable by apache - I had permission problems on the repository - the only way is to
     browse there with a web server e.g. http://<machine>/debs/security.debian.org/dists/wheezy/dists/Release
	 - The only sign is apt-get update says 'Ign' on these lines which means ignored

   * This is first cut untested except on security updates - be-aware hopefully it is useful.
   * Patches/fixes welcome.

Notes:
      A local respository directory can be given with the non-standard URL syntax "file:abc" -> local directory "abc"

   Configuration file
   -------------------------

  To use different repository or parameters other than the default security updates you define a configuration file as per a ConfigParser class.
  The -c option tells the command read the parameters from the given configuration file:

    ./RepositoryMirror.py -c azza.cfg
  
  where you create azza.cfg via:

cat >azza.cfg <<EOF
# to end of line is a comment
# Place all settings in 'setup' section header :
[setup]
# Rest of lines are <Parameter> ':' <Value>
# e.g. define URL for the repository to mirror:
repository: http://azza.tqc.com.au/movies3/work/debs/security.debian.org
# Restrict to given space seperated list of releases (distributions) to mirror:
distributions: wheezy/updates
# Name local directory to place mirror into:
lmirror: azza-updates
EOF

  * Simple script to make a quick mirror of just the packages installed locally:
  -----
#! /bin/sh

echo "Create local package list"
awk '/^Package: / { print $2; }' /var/lib/dpkg/status > pkg.list

echo "Create repository"
./RepositoryMirror.py -c RM.cfg -create

echo "Print repository info"
./RepositoryMirror.py -c RM.cfg -info

echo "Print download work"
./RepositoryMirror.py -c RM.cfg

echo "Download packages for repository"
./RepositoryMirror.py -c RM.cfg -fetch

cat >>RM.cfg<<EOF
# Restrict debs to mirror for Release wheezy/updates to those in pkg.list
packages-jessie: pkg.list
EOF
